name: go
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - run: go test ./... -race
  
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - name: Run tests with coverage
      run: |
        go test -coverprofile=coverage.txt -covermode=atomic $(go list ./... | grep -v '/examples/' | grep -v '/testdata' | grep -v '/mcptest' | grep -v '/server/internal/gen')
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: coverage.txt
    - name: Generate coverage report
      uses: fgrosse/go-coverage-report@v1.2.0
      if: github.event_name == 'pull_request'

  verify-codegen:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - name: Run code generation
      run: go generate ./...
    - name: Check for uncommitted changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "Error: Generated code is not up to date. Please run 'go generate ./...' and commit the changes."
          git status
          git diff
          exit 1
        fi
